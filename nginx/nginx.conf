events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'upstream="$upstream_addr"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=chat:10m rate=5r/s;

    # Upstream definitions
    upstream frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream api_gateway {
        least_conn;
        server api-gateway:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Chat service với load balancing cho multiple instances
    upstream chat_service {
        least_conn;
        # Docker Compose tự động load balance giữa các replicas
        server chat-service:3004 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main HTTP server
    server {
        listen 80;
        server_name localhost;

        # Security Headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"ok","service":"nginx","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API Gateway server
    server {
        listen 8080;
        server_name localhost;

        # API routes with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60;
            proxy_connect_timeout 10;
            proxy_send_timeout 60;
            
            # Add load balancing info
            add_header X-Upstream-Server $upstream_addr;
        }

        # Direct chat service routes (bypass API Gateway cho performance)
        location /direct/chat/ {
            limit_req zone=chat burst=10 nodelay;
            
            proxy_pass http://chat_service/api/chats/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120;
            proxy_connect_timeout 10;
            proxy_send_timeout 120;
            
            # Add load balancing info
            add_header X-Upstream-Server $upstream_addr;
            add_header X-Response-Time $upstream_response_time;
        }

        # Health checks
        location /health {
            access_log off;
            proxy_pass http://api_gateway/health;
            proxy_set_header Host $host;
        }

        # Chat service health
        location /health/chat {
            access_log off;
            proxy_pass http://chat_service/health;
            proxy_set_header Host $host;
        }

        # Metrics endpoints
        location /metrics {
            proxy_pass http://chat_service/metrics;
            proxy_set_header Host $host;
        }

        # Load monitoring
        location /load {
            proxy_pass http://chat_service/load;
            proxy_set_header Host $host;
        }
    }

    # Nginx status endpoint
    server {
        listen 9090;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;
            deny all;
        }
        
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"nginx"}';
            add_header Content-Type application/json;
        }
    }
}
